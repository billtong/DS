
#ifndef SORTS_H


/*
从数组中选出最小的数放在第一个
再选出第二小的放在第二个
。。。
一直选到倒数第二个
例子：每次从整个数组中选择（）内的正确元素
start：10 24 5 32 1 84 19
#1：(1) 24 5 32 10 84 19
#2：1 (5) 24 32 10 84 19
#3：1 5 (10) 32 24 84 19
#4：1 5 10 (19) 24 84 32
#5：1 5 10 19 (24) 84 32
end：1 5 10 19 24 (32) 84
*/
void selectionSorts(int *arr, int size);

/*
从第二个数开始将他正确的插在前面区间内的位置中
位置的寻找使用线性搜索，一个个的来O（n）
例子：每次将（）左边的那个数字正确的insert到（）里面去
start：10 24 5 32 1 84 19
#1：(10) 24 5 32 1 84 19
#2：(5 10) 24 32 1 84 19
#3：(5 10 24) 32 1 84 19
#4：(1 5 10 24 32) 84 19
#5：(1 5 10 24 32 84) 19
end：(1 5 10 19 24 32 84
*/
void linearInsertionSorts(int* arr, int size);

/*
原理和Linear的基本相同
只是在选择位置时不再用线性搜索，而是binary search，O(ln（n）)
*/
void binaryInsertionSorts(int *arr, int size);




#endif // !SORTS_H

